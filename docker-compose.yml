services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-backend_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB:-backend_db}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    container_name: sdatabase
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    container_name: qandoon_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: .
    environment:
      PYTHONPATH: /app
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      DB_HOST: db
      REDIS_URL: ${REDIS_URL}
      EMAIL_KEY: ${EMAIL_KEY}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - .env:/app/.env
    command: >
      sh -c "uvicorn backend.main:app --host 0.0.0.0 --port 8000 --workers 4"
    container_name: qandoon_backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pgdata:
  redis_data:
